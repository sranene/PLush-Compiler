
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSrightEXPONENTleftTIMESDIVIDEREMAINDERleftPLUSMINUSleftGEGTLELTleftEQUALSNOTEQUALSleftANDleftORAND ASSIGN BOOLEAN CHAR COMMA COMMENT DECLARE DIVIDE ELSE EQUALS EXPONENT FALSE FLOAT FUN GE GT IF INT LBRACE LBRACKET LE LPAREN LT MINUS NAME NOT NOTEQUALS OR PLUS PRINT_ARRAYINT PRINT_ARRAYINT2 PRINT_BOOLEAN PRINT_CHAR PRINT_FLOAT PRINT_INT PRINT_STRING RBRACE RBRACKET REMAINDER RPAREN SEMICOLON STRING TBOOLEAN TCHAR TFLOAT TIMES TINT TRUE TSTRING TVOID UMINUS VAL VAR VOID WHILEprogram : function_declarations\n               | global_declarations function_declarations\n    global_declarations : global_declarations global_declaration\n                           | global_declaration\n                           |\n    global_declaration : variable_decl\n                          | function_init\n    function_init : FUN name LPAREN parameter_list RPAREN return_type SEMICOLON\n    function_declarations : function_declarations function_decl\n                             | function_decl\n    function_decl : FUN name LPAREN parameter_list RPAREN return_type body\n    return_type : DECLARE type_or_arraytype\n                   |\n    variable_decl : modifier name DECLARE type_or_arraytype ASSIGN expression SEMICOLON\n    modifier : VAR\n                | VAL\n    body : LBRACE statement_list RBRACE\n    statement_list : statement_list statement\n                      | statement\n    statement : if\n    \t\t \t | while\n                 | variable_decl\n                 | assignment\n                 | function_call_inline SEMICOLON\n                 | print SEMICOLON\n                 |\n    if : IF expression body else\n    else : ELSE body\n            |\n    while : WHILE expression body\n    type_or_arraytype : type\n                         | LBRACKET type RBRACKET\n                         | LBRACKET LBRACKET type RBRACKET RBRACKET\n    type : TVOID\n            | TINT\n            | TSTRING\n            | TBOOLEAN\n            | TCHAR\n            | TFLOAT\n     function_call_inline : name LPAREN argument_list RPAREN\n     print : print_type LPAREN value RPAREN\n     print_type : PRINT_INT\n                   | PRINT_FLOAT\n                   | PRINT_ARRAYINT\n                   | PRINT_ARRAYINT2\n                   | PRINT_STRING\n                   | PRINT_CHAR\n                   | PRINT_BOOLEAN\n    parameter_list : parameter COMMA parameter_list\n                      | parameter\n                      |\n    argument_list : argument COMMA argument_list\n    \t\t\t\t | argument\n    \t\t\t\t |\n    parameter : modifier name DECLARE type_or_arraytype\n    argument : expression\n    expression : expression and_or expression_m\n\t              | expression_m\n\texpression_m : expression_s\n                    | MINUS expression_m\n                    | expression_m sign expression_s\n     expression_s : value \n\t                 | expression_s psign value\n     and_or : AND\n\t           | OR\n    psign : TIMES\n\t         | DIVIDE\n    sign : PLUS\n            | MINUS\n            | EXPONENT\n            | REMAINDER\n            | EQUALS\n            | NOTEQUALS\n            | GE\n            | GT\n            | LE\n            | LT\n\tvalue : name\n             | boolean\n             | int\n             | float\n             | string\n             | char\n             | void\n             | function_call_inline\n             | array_call_inline\n             | NOT name\n             | LPAREN expression RPAREN\n\tassignment : array_call_or_name ASSIGN expression SEMICOLON\n    array_call_or_name : name\n                          | array_call_inline\n    array_call_inline : name LBRACKET value RBRACKET\n    \t\t\t\t     | name LBRACKET value RBRACKET LBRACKET value RBRACKET\n    name : NAME boolean : TRUE\n                | FALSE\n     int : INT  float : FLOAT  string : STRING  char : CHAR  void : VOID '
    
_lr_action_items = {'FUN':([0,2,3,4,5,7,8,12,14,15,73,74,80,132,],[6,13,6,-10,-4,-6,-7,-9,13,-3,-11,-8,-14,-17,]),'VAR':([0,3,5,7,8,15,20,22,37,74,75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[10,10,-4,-6,-7,-3,10,10,10,-8,10,-14,10,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'VAL':([0,3,5,7,8,15,20,22,37,74,75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[11,11,-4,-6,-7,-3,11,11,11,-8,11,-14,11,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'$end':([1,2,4,12,14,73,132,],[0,-1,-10,-9,-2,-11,-17,]),'NAME':([6,9,10,11,13,25,39,51,61,62,75,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,132,133,134,135,138,139,141,143,144,148,149,151,154,],[17,17,-15,-16,17,17,17,17,17,17,17,17,17,-14,17,-64,-65,17,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,17,-66,-67,17,-19,-20,-21,-22,-23,17,17,-17,-18,-24,-25,17,17,17,-29,-30,17,-27,-89,-28,]),'LPAREN':([16,17,19,39,47,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,112,114,116,117,118,119,120,121,122,138,139,141,148,],[20,-94,22,62,78,62,62,62,62,62,-64,-65,62,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,62,-66,-67,62,62,78,139,-42,-43,-44,-45,-46,-47,-48,62,62,62,62,]),'DECLARE':([17,18,36,38,42,],[-94,21,44,46,44,]),'LBRACKET':([17,21,28,44,46,47,112,142,],[-94,28,40,28,28,79,79,148,]),'TIMES':([17,47,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,99,128,129,130,140,142,155,],[-94,-78,96,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-87,96,-63,-88,-40,-92,-93,]),'DIVIDE':([17,47,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,99,128,129,130,140,142,155,],[-94,-78,97,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-87,97,-63,-88,-40,-92,-93,]),'PLUS':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,85,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-60,-87,85,-61,-63,-88,-40,-92,-93,]),'MINUS':([17,39,47,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,78,81,82,83,98,99,110,111,127,128,129,130,138,140,141,142,155,],[-94,51,-78,86,-59,51,-62,-79,-80,-81,-82,-83,-84,-85,-86,51,-95,-96,-97,-98,-99,-100,-101,51,51,-64,-65,-60,-87,51,51,86,-61,-63,-88,51,-40,51,-92,-93,]),'EXPONENT':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,87,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-60,-87,87,-61,-63,-88,-40,-92,-93,]),'REMAINDER':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,88,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-60,-87,88,-61,-63,-88,-40,-92,-93,]),'EQUALS':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,89,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,89,-87,89,-61,-63,-88,-40,-92,-93,]),'NOTEQUALS':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,90,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,90,-87,90,-61,-63,-88,-40,-92,-93,]),'GE':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,91,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,91,-87,91,-61,-63,-88,-40,-92,-93,]),'GT':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,92,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,92,-87,92,-61,-63,-88,-40,-92,-93,]),'LE':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,93,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,93,-87,93,-61,-63,-88,-40,-92,-93,]),'LT':([17,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,127,128,129,130,140,142,155,],[-94,-78,94,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,94,-87,94,-61,-63,-88,-40,-92,-93,]),'SEMICOLON':([17,27,29,30,31,32,33,34,36,43,47,48,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,71,76,98,99,108,109,127,128,129,130,131,140,142,145,152,155,],[-94,-31,-34,-35,-36,-37,-38,-39,-13,74,-78,80,-58,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-32,-12,-60,-87,134,135,-57,-61,-63,-88,-33,-40,-92,151,-41,-93,]),'AND':([17,47,48,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,100,125,127,128,129,130,136,137,140,142,145,155,],[-94,-78,82,-58,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-60,-87,82,82,-57,-61,-63,-88,82,82,-40,-92,82,-93,]),'OR':([17,47,48,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,98,99,100,125,127,128,129,130,136,137,140,142,145,155,],[-94,-78,83,-58,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-60,-87,83,83,-57,-61,-63,-88,83,83,-40,-92,83,-93,]),'RPAREN':([17,20,22,23,24,27,29,30,31,32,33,34,35,37,45,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,71,77,78,98,99,100,123,124,125,127,128,129,130,131,140,141,142,146,147,155,],[-94,-51,-51,36,-50,-31,-34,-35,-36,-37,-38,-39,42,-51,-49,-78,-58,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-32,-55,-54,-60,-87,130,140,-53,-56,-57,-61,-63,-88,-33,-40,-54,-92,152,-52,-93,]),'COMMA':([17,24,27,29,30,31,32,33,34,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,71,77,98,99,124,125,127,128,129,130,131,140,142,155,],[-94,37,-31,-34,-35,-36,-37,-38,-39,-78,-58,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-32,-55,-60,-87,141,-56,-57,-61,-63,-88,-33,-40,-92,-93,]),'LBRACE':([17,27,29,30,31,32,33,34,36,42,43,47,49,50,52,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,71,72,76,98,99,127,128,129,130,131,136,137,140,142,150,155,],[-94,-31,-34,-35,-36,-37,-38,-39,-13,-13,75,-78,-58,-59,-62,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,-32,75,-12,-60,-87,-57,-61,-63,-88,-33,75,75,-40,-92,75,-93,]),'RBRACKET':([17,29,30,31,32,33,34,41,47,53,54,55,56,57,58,59,60,63,64,65,66,67,68,69,70,99,101,126,130,140,142,153,155,],[-94,-34,-35,-36,-37,-38,-39,71,-78,-79,-80,-81,-82,-83,-84,-85,-86,-95,-96,-97,-98,-99,-100,-101,101,-87,131,142,-88,-40,-92,155,-93,]),'ASSIGN':([17,26,27,29,30,31,32,33,34,71,112,113,115,131,142,155,],[-94,39,-31,-34,-35,-36,-37,-38,-39,-32,-90,138,-91,-33,-92,-93,]),'TVOID':([21,28,40,44,46,],[29,29,29,29,29,]),'TINT':([21,28,40,44,46,],[30,30,30,30,30,]),'TSTRING':([21,28,40,44,46,],[31,31,31,31,31,]),'TBOOLEAN':([21,28,40,44,46,],[32,32,32,32,32,]),'TCHAR':([21,28,40,44,46,],[33,33,33,33,33,]),'TFLOAT':([21,28,40,44,46,],[34,34,34,34,34,]),'NOT':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[61,61,61,61,61,61,-64,-65,61,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,61,-66,-67,61,61,61,61,61,61,]),'TRUE':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[63,63,63,63,63,63,-64,-65,63,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,63,-66,-67,63,63,63,63,63,63,]),'FALSE':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[64,64,64,64,64,64,-64,-65,64,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,64,-66,-67,64,64,64,64,64,64,]),'INT':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[65,65,65,65,65,65,-64,-65,65,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,65,-66,-67,65,65,65,65,65,65,]),'FLOAT':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[66,66,66,66,66,66,-64,-65,66,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,66,-66,-67,66,66,66,66,66,66,]),'STRING':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[67,67,67,67,67,67,-64,-65,67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,67,-66,-67,67,67,67,67,67,67,]),'CHAR':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[68,68,68,68,68,68,-64,-65,68,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,68,-66,-67,68,68,68,68,68,68,]),'VOID':([39,51,62,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,110,111,138,139,141,148,],[69,69,69,69,69,69,-64,-65,69,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,69,-66,-67,69,69,69,69,69,69,]),'RBRACE':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[-26,-14,132,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'IF':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[110,-14,110,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'WHILE':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[111,-14,111,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_INT':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[116,-14,116,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_FLOAT':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[117,-14,117,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_ARRAYINT':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[118,-14,118,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_ARRAYINT2':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[119,-14,119,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_STRING':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[120,-14,120,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_CHAR':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[121,-14,121,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'PRINT_BOOLEAN':([75,80,102,103,104,105,106,107,132,133,134,135,143,144,149,151,154,],[122,-14,122,-19,-20,-21,-22,-23,-17,-18,-24,-25,-29,-30,-27,-89,-28,]),'ELSE':([132,143,],[-17,150,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_declarations':([0,3,],[2,14,]),'global_declarations':([0,],[3,]),'function_decl':([0,2,3,14,],[4,12,4,12,]),'global_declaration':([0,3,],[5,15,]),'variable_decl':([0,3,75,102,],[7,7,106,106,]),'function_init':([0,3,],[8,8,]),'modifier':([0,3,20,22,37,75,102,],[9,9,25,25,25,9,9,]),'name':([6,9,13,25,39,51,61,62,75,78,79,81,84,95,102,110,111,138,139,141,148,],[16,18,19,38,47,47,99,47,112,47,47,47,47,47,112,47,47,47,47,47,47,]),'parameter_list':([20,22,37,],[23,35,45,]),'parameter':([20,22,37,],[24,24,24,]),'type_or_arraytype':([21,44,46,],[26,76,77,]),'type':([21,28,40,44,46,],[27,41,70,27,27,]),'return_type':([36,42,],[43,72,]),'expression':([39,62,78,110,111,138,141,],[48,100,125,136,137,145,125,]),'expression_m':([39,51,62,78,81,110,111,138,141,],[49,98,49,49,127,49,49,49,49,]),'expression_s':([39,51,62,78,81,84,110,111,138,141,],[50,50,50,50,50,128,50,50,50,50,]),'value':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[52,52,52,52,126,52,52,129,52,52,52,146,52,153,]),'boolean':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'int':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'float':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'string':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'char':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'void':([39,51,62,78,79,81,84,95,110,111,138,139,141,148,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'function_call_inline':([39,51,62,75,78,79,81,84,95,102,110,111,138,139,141,148,],[59,59,59,108,59,59,59,59,59,108,59,59,59,59,59,59,]),'array_call_inline':([39,51,62,75,78,79,81,84,95,102,110,111,138,139,141,148,],[60,60,60,115,60,60,60,60,60,115,60,60,60,60,60,60,]),'body':([43,72,136,137,150,],[73,73,143,144,154,]),'and_or':([48,100,125,136,137,145,],[81,81,81,81,81,81,]),'sign':([49,98,127,],[84,84,84,]),'psign':([50,128,],[95,95,]),'statement_list':([75,],[102,]),'statement':([75,102,],[103,133,]),'if':([75,102,],[104,104,]),'while':([75,102,],[105,105,]),'assignment':([75,102,],[107,107,]),'print':([75,102,],[109,109,]),'array_call_or_name':([75,102,],[113,113,]),'print_type':([75,102,],[114,114,]),'argument_list':([78,141,],[123,147,]),'argument':([78,141,],[124,124,]),'else':([143,],[149,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_declarations','program',1,'p_program','main.py',184),
  ('program -> global_declarations function_declarations','program',2,'p_program','main.py',185),
  ('global_declarations -> global_declarations global_declaration','global_declarations',2,'p_global_declarations','main.py',194),
  ('global_declarations -> global_declaration','global_declarations',1,'p_global_declarations','main.py',195),
  ('global_declarations -> <empty>','global_declarations',0,'p_global_declarations','main.py',196),
  ('global_declaration -> variable_decl','global_declaration',1,'p_global_declaration','main.py',206),
  ('global_declaration -> function_init','global_declaration',1,'p_global_declaration','main.py',207),
  ('function_init -> FUN name LPAREN parameter_list RPAREN return_type SEMICOLON','function_init',7,'p_function_init','main.py',213),
  ('function_declarations -> function_declarations function_decl','function_declarations',2,'p_function_declarations','main.py',219),
  ('function_declarations -> function_decl','function_declarations',1,'p_function_declarations','main.py',220),
  ('function_decl -> FUN name LPAREN parameter_list RPAREN return_type body','function_decl',7,'p_function_decl','main.py',230),
  ('return_type -> DECLARE type_or_arraytype','return_type',2,'p_return_type','main.py',235),
  ('return_type -> <empty>','return_type',0,'p_return_type','main.py',236),
  ('variable_decl -> modifier name DECLARE type_or_arraytype ASSIGN expression SEMICOLON','variable_decl',7,'p_variable_decl','main.py',243),
  ('modifier -> VAR','modifier',1,'p_modifier','main.py',248),
  ('modifier -> VAL','modifier',1,'p_modifier','main.py',249),
  ('body -> LBRACE statement_list RBRACE','body',3,'p_body','main.py',256),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','main.py',262),
  ('statement_list -> statement','statement_list',1,'p_statement_list','main.py',263),
  ('statement -> if','statement',1,'p_statement','main.py',273),
  ('statement -> while','statement',1,'p_statement','main.py',274),
  ('statement -> variable_decl','statement',1,'p_statement','main.py',275),
  ('statement -> assignment','statement',1,'p_statement','main.py',276),
  ('statement -> function_call_inline SEMICOLON','statement',2,'p_statement','main.py',277),
  ('statement -> print SEMICOLON','statement',2,'p_statement','main.py',278),
  ('statement -> <empty>','statement',0,'p_statement','main.py',279),
  ('if -> IF expression body else','if',4,'p_if','main.py',286),
  ('else -> ELSE body','else',2,'p_else','main.py',291),
  ('else -> <empty>','else',0,'p_else','main.py',292),
  ('while -> WHILE expression body','while',3,'p_while_statement','main.py',298),
  ('type_or_arraytype -> type','type_or_arraytype',1,'p_type_or_arraytype','main.py',305),
  ('type_or_arraytype -> LBRACKET type RBRACKET','type_or_arraytype',3,'p_type_or_arraytype','main.py',306),
  ('type_or_arraytype -> LBRACKET LBRACKET type RBRACKET RBRACKET','type_or_arraytype',5,'p_type_or_arraytype','main.py',307),
  ('type -> TVOID','type',1,'p_type','main.py',318),
  ('type -> TINT','type',1,'p_type','main.py',319),
  ('type -> TSTRING','type',1,'p_type','main.py',320),
  ('type -> TBOOLEAN','type',1,'p_type','main.py',321),
  ('type -> TCHAR','type',1,'p_type','main.py',322),
  ('type -> TFLOAT','type',1,'p_type','main.py',323),
  ('function_call_inline -> name LPAREN argument_list RPAREN','function_call_inline',4,'p_function_call_inline','main.py',329),
  ('print -> print_type LPAREN value RPAREN','print',4,'p_print','main.py',334),
  ('print_type -> PRINT_INT','print_type',1,'p_print_type','main.py',339),
  ('print_type -> PRINT_FLOAT','print_type',1,'p_print_type','main.py',340),
  ('print_type -> PRINT_ARRAYINT','print_type',1,'p_print_type','main.py',341),
  ('print_type -> PRINT_ARRAYINT2','print_type',1,'p_print_type','main.py',342),
  ('print_type -> PRINT_STRING','print_type',1,'p_print_type','main.py',343),
  ('print_type -> PRINT_CHAR','print_type',1,'p_print_type','main.py',344),
  ('print_type -> PRINT_BOOLEAN','print_type',1,'p_print_type','main.py',345),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','main.py',352),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','main.py',353),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list','main.py',354),
  ('argument_list -> argument COMMA argument_list','argument_list',3,'p_argument_list','main.py',362),
  ('argument_list -> argument','argument_list',1,'p_argument_list','main.py',363),
  ('argument_list -> <empty>','argument_list',0,'p_argument_list','main.py',364),
  ('parameter -> modifier name DECLARE type_or_arraytype','parameter',4,'p_parameter','main.py',373),
  ('argument -> expression','argument',1,'p_argument','main.py',378),
  ('expression -> expression and_or expression_m','expression',3,'p_expression','main.py',385),
  ('expression -> expression_m','expression',1,'p_expression','main.py',386),
  ('expression_m -> expression_s','expression_m',1,'p_expression_m','main.py',394),
  ('expression_m -> MINUS expression_m','expression_m',2,'p_expression_m','main.py',395),
  ('expression_m -> expression_m sign expression_s','expression_m',3,'p_expression_m','main.py',396),
  ('expression_s -> value','expression_s',1,'p_expression_s','main.py',408),
  ('expression_s -> expression_s psign value','expression_s',3,'p_expression_s','main.py',409),
  ('and_or -> AND','and_or',1,'p_and_or','main.py',417),
  ('and_or -> OR','and_or',1,'p_and_or','main.py',418),
  ('psign -> TIMES','psign',1,'p_psign','main.py',423),
  ('psign -> DIVIDE','psign',1,'p_psign','main.py',424),
  ('sign -> PLUS','sign',1,'p_sign','main.py',430),
  ('sign -> MINUS','sign',1,'p_sign','main.py',431),
  ('sign -> EXPONENT','sign',1,'p_sign','main.py',432),
  ('sign -> REMAINDER','sign',1,'p_sign','main.py',433),
  ('sign -> EQUALS','sign',1,'p_sign','main.py',434),
  ('sign -> NOTEQUALS','sign',1,'p_sign','main.py',435),
  ('sign -> GE','sign',1,'p_sign','main.py',436),
  ('sign -> GT','sign',1,'p_sign','main.py',437),
  ('sign -> LE','sign',1,'p_sign','main.py',438),
  ('sign -> LT','sign',1,'p_sign','main.py',439),
  ('value -> name','value',1,'p_value','main.py',446),
  ('value -> boolean','value',1,'p_value','main.py',447),
  ('value -> int','value',1,'p_value','main.py',448),
  ('value -> float','value',1,'p_value','main.py',449),
  ('value -> string','value',1,'p_value','main.py',450),
  ('value -> char','value',1,'p_value','main.py',451),
  ('value -> void','value',1,'p_value','main.py',452),
  ('value -> function_call_inline','value',1,'p_value','main.py',453),
  ('value -> array_call_inline','value',1,'p_value','main.py',454),
  ('value -> NOT name','value',2,'p_value','main.py',455),
  ('value -> LPAREN expression RPAREN','value',3,'p_value','main.py',456),
  ('assignment -> array_call_or_name ASSIGN expression SEMICOLON','assignment',4,'p_assignment','main.py',467),
  ('array_call_or_name -> name','array_call_or_name',1,'p_array_call_or_name','main.py',472),
  ('array_call_or_name -> array_call_inline','array_call_or_name',1,'p_array_call_or_name','main.py',473),
  ('array_call_inline -> name LBRACKET value RBRACKET','array_call_inline',4,'p_array_call_inline','main.py',478),
  ('array_call_inline -> name LBRACKET value RBRACKET LBRACKET value RBRACKET','array_call_inline',7,'p_array_call_inline','main.py',479),
  ('name -> NAME','name',1,'p_name','main.py',488),
  ('boolean -> TRUE','boolean',1,'p_boolean','main.py',492),
  ('boolean -> FALSE','boolean',1,'p_boolean','main.py',493),
  ('int -> INT','int',1,'p_int','main.py',498),
  ('float -> FLOAT','float',1,'p_float','main.py',502),
  ('string -> STRING','string',1,'p_string','main.py',506),
  ('char -> CHAR','char',1,'p_char','main.py',510),
  ('void -> VOID','void',1,'p_void','main.py',514),
]
